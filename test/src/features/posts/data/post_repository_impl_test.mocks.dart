// Mocks generated by Mockito 5.4.4 from annotations
// in fudo_flutter/test/src/features/posts/data/post_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fudo_flutter/src/core/config/network/api_exception.dart' as _i5;
import 'package:fudo_flutter/src/core/config/network/api_response.dart' as _i2;
import 'package:fudo_flutter/src/core/config/network/api_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0<T1> extends _i1.SmartFake
    implements _i2.ApiResponse<T1> {
  _FakeApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<(_i5.ApiException?, _i2.ApiResponse<T>)> get<T>(String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
        ),
        returnValue: _i4.Future<(_i5.ApiException?, _i2.ApiResponse<T>)>.value((
          null,
          _FakeApiResponse_0<T>(
            this,
            Invocation.method(
              #get,
              [path],
            ),
          )
        )),
      ) as _i4.Future<(_i5.ApiException?, _i2.ApiResponse<T>)>);

  @override
  _i4.Future<(_i5.ApiException?, _i2.ApiResponse<T>)> post<T>(
    String? path, {
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {#data: data},
        ),
        returnValue: _i4.Future<(_i5.ApiException?, _i2.ApiResponse<T>)>.value((
          null,
          _FakeApiResponse_0<T>(
            this,
            Invocation.method(
              #post,
              [path],
              {#data: data},
            ),
          )
        )),
      ) as _i4.Future<(_i5.ApiException?, _i2.ApiResponse<T>)>);
}
